// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
buildscript {
//    ext.kotlin_version = "${ext.versions.kotlin_gradle_plugin}"
    ext.kotlin_version = "1.8.0"

    ext {
        keepalive_version = "1.0.3.12"
        livesdk_version = "1.0.1.4"
        hilt_version = "2.37"//hilt support
//        kotlin_version = '1.3.72'
//        build_target = project.property('BUILD_TARGET')
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url "https://mvn.mob.com/android" }
        maven { url 'https://developer.huawei.com/repo/' }

        flatDir { dirs 'libs' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.alibaba:arouter-register:1.0.2"
//        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.21'
//        classpath 'com.google.gms:google-services:4.3.15'

        //可混淆Android 4大组件、自定义View等任意类的插件
        classpath "com.github.liujingxing:XmlClassGuard:1.2.4"

        //垃圾代码
        classpath CommonLibs.INSTANCE.junkcode

        classpath StringFog.INSTANCE.stringfog
        classpath StringFog.INSTANCE.stringfog_xor
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url 'https://jitpack.io' }
        mavenCentral()
        flatDir {
            dirs 'libs', '../x-module-common/libs', '../xxx-ExternalAAR'
        }
        maven {
            url "https://artifact.bytedance.com/repository/pangle/"
        }
        maven { url 'https://developer.huawei.com/repo/' }

        flatDir {
            dirs 'libs', '../x-module-common/libs', '../xxx-ExternalAAR'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def transform(String targetStr) {
    return new String(targetStr.getBytes("iso8859-1"), "UTF-8")
}
